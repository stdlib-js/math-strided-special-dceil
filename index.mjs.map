{"version":3,"file":"index.mjs","sources":["../e8148f7ed7a60d7a792af4c88ac10f","../lib/index.js"],"sourcesContent":["export default '/home/runner/work/math-strided-special-dceil/math-strided-special-dceil/lib'","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round each element in a double-precision floating-point strided array `x` toward positive infinity and assign the results to elements in a double-precision floating-point strided array `y`.\n*\n* @module @stdlib/math-strided-special-dceil\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var dceil = require( '@stdlib/math-strided-special-dceil' );\n*\n* var x = new Float64Array( [ 1.1, 2.5, -3.5, 4.0, -5.9 ] );\n* var y = new Float64Array( [ 0.0, 0.0, 0.0, 0.0, 0.0 ] );\n*\n* dceil( x.length, x, 1, y, 1 );\n* // y => <Float64Array>[ 2.0, 3.0, -3.0, 4.0, -5.0 ]\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var dceil = require( '@stdlib/math-strided-special-dceil' );\n*\n* var x = new Float64Array( [ 1.1, 2.5, -3.5, 4.0, -5.9 ] );\n* var y = new Float64Array( [ 0.0, 0.0, 0.0, 0.0, 0.0 ] );\n*\n* dceil.ndarray( x.length, x, 1, 0, y, 1, 0 );\n* // y => <Float64Array>[ 2.0, 3.0, -3.0, 4.0, -5.0 ]\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils-try-require' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar tmp = tryRequire( join( __dirname, './native.js' ) );\nif ( !(tmp instanceof Error) ) {\n\tmain = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["join","require","tryRequire","main","tmp","Error","module","exports"],"mappings":";;AAAA,ICgDIA,EAAOC,QAAS,QAASD,KACzBE,EAAaD,QAAS,6BACtBE,EAAOF,QAAS,aAKhBG,EAAMF,EAAYF,EDvDP,8ECuDwB,gBAChCI,aAAeC,QACrBF,EAAOC,GAMRE,OAAOC,QAAUJ"}